{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactForm/ContactForm.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","hooks/useLocalStorage.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","target","value","reset","className","s","form","preventDefault","label","htmlFor","input","type","pattern","title","required","onChange","id","button","Contact","contact","onDeleteContact","onClick","ContactList","contacts","length","noContacts","item","map","list","Filter","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","newContacts","find","toLowerCase","alert","prevContact","normalizedFilter","includes","filteredContacts","contactsId","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d48ebdac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1aCPV\",\"input\":\"Filter_input__1LO_T\"};","import { useState } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.scss';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          id={nameInputId}\n        />\n      </label>\n      <label className={s.label} htmlFor={numberInputId}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          id={numberInputId}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.scss';\nconst Contact = ({ contact, onDeleteContact }) => (\n  <>\n    <span>\n      {contact.name}: {contact.number}\n    </span>\n    <button className={s.button} type=\"button\" onClick={onDeleteContact}>\n      Delete\n    </button>\n  </>\n);\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.scss';\nimport Contact from './Contact';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return contacts.length === 0 ? (\n    <div className={s.noContacts}>You haven't contacts!</div>\n  ) : (\n    <ul className={s.item}>\n      {contacts.map(contact => (\n        <li className={s.list} key={contact.id}>\n          <Contact\n            contact={contact}\n            onDeleteContact={() => onDeleteContact(contact.id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.scss';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <>\n      <label className={s.label}>\n        Find contact by name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport './App.css';\nimport shortid from 'shortid';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const newContacts = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    contacts.find(\n      contact => newContacts.name.toLowerCase() === contact.name.toLowerCase(),\n    )\n      ? alert(`${newContacts.name} is already in contacts`)\n      : setContacts(prevContact => [newContacts, ...prevContact]);\n  };\n\n  const deleteContacts = contactsId => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== contactsId),\n    );\n  };\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={filteredContacts()}\n        onDeleteContact={deleteContacts}\n      />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1E5IK\",\"label\":\"ContactForm_label__1WPda\",\"input\":\"ContactForm_input__3yXNW\",\"button\":\"ContactForm_button__2xVXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__r3yt-\",\"noContacts\":\"ContactList_noContacts__1Ann0\",\"list\":\"ContactList_list__PYdsb\",\"button\":\"ContactList_button__RSRs3\"};"],"sourceRoot":""}